name: PR
on:
  pull_request:
    branches: [ "dev", "main" ]
jobs:
  build-and-test-frontend:
    defaults:
      run:
        working-directory: ./frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Get Yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Instal dependencies
        run: yarn install --frozen-lockfile
      - name: Run unit tests
        run: yarn run test:cov
      - name: Check if prod bundle is buildable
        run: yarn run build
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          name: frontend-coverage
          files: ./frontend/coverage/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}

  build-and-test-backend:
    defaults:
      run:
        working-directory: ./api
    runs-on: ubuntu-latest
    env:
      DOPPLER_TOKEN: ${{ secrets.DOPPLER_CI_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Get Yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Instal dependencies
        run: yarn install --frozen-lockfile
      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v1
      - name: Docker compose up
        run: yarn run test:docker:up
      - name: Run unit tests
        run: yarn test:cov
      - name: Setup DB for testing
        run: sudo scripts/setup-prisma.sh
      - name: Run e2e tests
        run: doppler run -- yarn run test:e2e
      - name: Docker compose down
        run: yarn run test:docker:down
      - name: Remove db folder of docker # Post cache node modules fail fix
        run: sudo rm -rf ./test/db
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          name: api-coverage
          files: ./api/coverage/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}

